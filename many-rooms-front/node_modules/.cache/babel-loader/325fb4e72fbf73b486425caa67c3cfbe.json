{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abhinavdusi/Desktop/Projects/many-rooms/many-rooms-front/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport Navbar from './Navbar';\nimport OptionsPanel from './OptionsPanel';\nimport ChatBoxScreen from './Screens/ChatBoxScreen';\nimport CreateRoomScreen from './Screens/CreateRoomScreen';\nimport FloorScreen from './Screens/FloorScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProfileScreen from './Screens/ProfileScreen';\nimport SettingsScreen from './Screens/SettingsScreen';\nimport SupportScreen from './Screens/SupportScreen';\nimport { floorList } from './FloorListInfo';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      screenToLoad: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }, this)\n    };\n\n    this.handleSelection = selection => {\n      console.log('Selection handled');\n      let chosenFloor = this.state.chosenFloor;\n      chosenFloor = selection;\n      this.setState({\n        chosenFloor\n      });\n    };\n  }\n\n  componentDidMount() {\n    let screenToLoad;\n    const split = window.location.pathname.split('/');\n\n    switch (split[1]) {\n      case 'home':\n        screenToLoad = /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'profile':\n        screenToLoad = /*#__PURE__*/_jsxDEV(ProfileScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'settings':\n        screenToLoad = /*#__PURE__*/_jsxDEV(SettingsScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'support':\n        screenToLoad = /*#__PURE__*/_jsxDEV(SupportScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 'f':\n        const floorName = floorList.filter(floor => floor.url === split[2]);\n        screenToLoad = /*#__PURE__*/_jsxDEV(FloorScreen, {\n          floor: floorList.filter(floor => floor.url === split[2])[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this);\n        break;\n\n      default:\n        screenToLoad = /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n        this.handleSelection(null);\n        break;\n    }\n\n    this.setState({\n      screenToLoad\n    });\n  }\n\n  render() {\n    const divStyle = {\n      width: '100%',\n      height: 'calc(100% - 60px)',\n      display: 'inline-block',\n      paddingTop: '60px'\n    };\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: [/*#__PURE__*/_jsxDEV(OptionsPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), this.state.screenToLoad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/abhinavdusi/Desktop/Projects/many-rooms/many-rooms-front/src/App.js"],"names":["React","Component","Fragment","Navbar","OptionsPanel","ChatBoxScreen","CreateRoomScreen","FloorScreen","HomeScreen","ProfileScreen","SettingsScreen","SupportScreen","floorList","App","state","screenToLoad","handleSelection","selection","console","log","chosenFloor","setState","componentDidMount","split","window","location","pathname","floorName","filter","floor","url","name","render","divStyle","width","height","display","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'; \nimport Navbar from './Navbar'; \nimport OptionsPanel from './OptionsPanel'; \nimport ChatBoxScreen from './Screens/ChatBoxScreen'; \nimport CreateRoomScreen from './Screens/CreateRoomScreen';\nimport FloorScreen from './Screens/FloorScreen'; \nimport HomeScreen from './Screens/HomeScreen'; \nimport ProfileScreen from './Screens/ProfileScreen'; \nimport SettingsScreen from './Screens/SettingsScreen';\nimport SupportScreen from './Screens/SupportScreen';\nimport {floorList} from './FloorListInfo';\n\nexport default class App extends Component {\n  state = {\n    screenToLoad: <HomeScreen />\n  }\n\n  handleSelection = selection => {\n    console.log('Selection handled'); \n    let chosenFloor = this.state.chosenFloor; \n    chosenFloor = selection;\n    this.setState({chosenFloor});\n  }\n\n  componentDidMount() {\n    let screenToLoad;\n    const split = window.location.pathname.split('/'); \n    switch(split[1]) {\n      case 'home':\n        screenToLoad = <HomeScreen />;\n        break;\n      case 'profile':\n        screenToLoad = <ProfileScreen />;\n        break;\n      case 'settings':\n        screenToLoad = <SettingsScreen />;\n        break;\n      case 'support':\n        screenToLoad = <SupportScreen />;\n        break;\n      case 'f':\n        const floorName = floorList.filter(floor => floor.url === split[2]); \n        screenToLoad = <FloorScreen floor = {floorList.filter(floor => \n          floor.url === split[2])[0].name\n        }/>\n        break;\n      default:\n        screenToLoad = <HomeScreen />;\n        this.handleSelection(null); \n        break;\n    }\n    this.setState({screenToLoad});\n  }\n\n  render() {\n    const divStyle = {\n      width: '100%',\n      height: 'calc(100% - 60px)',\n      display: 'inline-block',\n      paddingTop: '60px'\n    };\n\n    return (\n      <Fragment>\n        <Navbar />\n        <div style = {divStyle}>\n          <OptionsPanel />\n          {this.state.screenToLoad}\n        </div>\n      </Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}